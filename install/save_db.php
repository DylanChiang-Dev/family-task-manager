<?php
/**
 * Save Database Configuration API
 */

header('Content-Type: application/json');

try {
    // Get POST data
    $host = $_POST['db_host'] ?? 'localhost';
    $port = $_POST['db_port'] ?? '3306';
    $dbname = $_POST['db_name'] ?? '';
    $user = $_POST['db_user'] ?? '';
    $pass = $_POST['db_pass'] ?? '';

    // Validate inputs
    if (empty($dbname) || empty($user)) {
        throw new Exception('Database name and username are required');
    }

    // Test connection first
    $dsn = "mysql:host=$host;port=$port;dbname=$dbname;charset=utf8mb4";
    $options = [
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC
    ];

    $pdo = new PDO($dsn, $user, $pass, $options);
    $pdo->query("SELECT 1");

    // Generate config file content
    $configContent = "<?php\n";
    $configContent .= "/**\n";
    $configContent .= " * Database Configuration\n";
    $configContent .= " * Auto-generated by Installation Wizard\n";
    $configContent .= " */\n\n";
    $configContent .= "define('DB_HOST', " . var_export($host, true) . ");\n";
    $configContent .= "define('DB_PORT', " . var_export($port, true) . ");\n";
    $configContent .= "define('DB_NAME', " . var_export($dbname, true) . ");\n";
    $configContent .= "define('DB_USER', " . var_export($user, true) . ");\n";
    $configContent .= "define('DB_PASS', " . var_export($pass, true) . ");\n";

    // Save to file
    $configPath = __DIR__ . '/../config/database.php';
    $result = file_put_contents($configPath, $configContent);

    if ($result === false) {
        throw new Exception('Failed to write configuration file. Check directory permissions.');
    }

    // Also create config.php if it doesn't exist
    $appConfigPath = __DIR__ . '/../config/config.php';
    if (!file_exists($appConfigPath)) {
        $appConfigContent = file_get_contents(__DIR__ . '/../config/config.example.php');
        file_put_contents($appConfigPath, $appConfigContent);
    }

    echo json_encode([
        'success' => true,
        'message' => 'Configuration saved successfully'
    ]);
} catch (PDOException $e) {
    http_response_code(400);
    echo json_encode([
        'success' => false,
        'message' => 'Database connection failed: ' . $e->getMessage()
    ]);
} catch (Exception $e) {
    http_response_code(400);
    echo json_encode([
        'success' => false,
        'message' => $e->getMessage()
    ]);
}
